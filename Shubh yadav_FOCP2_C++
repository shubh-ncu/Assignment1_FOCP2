FOCP II - Assignment 1
Q1
#include <iostream>
using namespace std;

bool isPrime(int num) {
    if (num < 2) return false;
    for (int i = 2; i * i <= num; i++)
        if (num % i == 0) return false;
    return true;
}

int nextPrime(int num) {
    while (!isPrime(++num));
    return num;
}

int main() {
    int n;
    cout << "Enter a positive integer: ";
    cin >> n;

    if (isPrime(n)) {
        cout << n << " is a prime number.\n";
        cout << "Next prime number is: " << nextPrime(n) << endl;
    } else {
        cout << n << " is not a prime number.\nFactors: ";
        for (int i = 1; i <= n; i++)
            if (n % i == 0) cout << i << " ";
        cout << endl;
    }
    
    return 0;
}
Q2
#include <iostream>
#include <algorithm>
using namespace std;

int main() {
    int size;
    cout << "Enter size of array: ";
    cin >> size;
    
    if (size < 2) {
        cout << "Size must be at least 2.";
        return 0;
    }

    int arr[size];
    cout << "Enter " << size << " elements: ";
    for (int i = 0; i < size; i++) cin >> arr[i];

    cout << "Reversed Array: ";
    for (int i = size - 1; i >= 0; i--) cout << arr[i] << " ";
    cout << endl;

    sort(arr, arr + size);
    cout << "Second Smallest: " << arr[1] << ", Second Largest: " << arr[size - 2] << endl;

    return 0;
}
Q3
Q4
#include <iostream>
using namespace std;

void spiralPattern(int n) {
    int arr[n][n], val = 1, top = 0, left = 0, bottom = n - 1, right = n - 1;

    while (val <= n * n) {
        for (int i = left; i <= right; i++) arr[top][i] = val++;
        top++;
        for (int i = top; i <= bottom; i++) arr[i][right] = val++;
        right--;
        for (int i = right; i >= left; i--) arr[bottom][i] = val++;
        bottom--;
        for (int i = bottom; i >= top; i--) arr[i][left] = val++;
        left++;
    }

    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) cout << arr[i][j] << "\t";
        cout << endl;
    }
}

int main() {
    int n;
    cout << "Enter n: ";
    cin >> n;
    spiralPattern(n);
    return 0;
}
Q5
#include <iostream>
using namespace std;

void rotate90(int n, int arr[][100]) {
    for (int i = 0; i < n; i++) {
        for (int j = n - 1; j >= 0; j--) 
            cout << arr[j][i] << " ";
        cout << endl;
    }
}

int main() {
    int n, arr[100][100];
    cout << "Enter size of matrix: ";
    cin >> n;

    cout << "Enter matrix elements:\n";
    for (int i = 0; i < n; i++)
        for (int j = 0; j < n; j++)
            cin >> arr[i][j];

    cout << "Rotated Matrix:\n";
    rotate90(n, arr);

    return 0;
}
