FOCP II - Assignment 1

Q1. Number manupulation and prime numbers.

#include<iostream>
using namespace std;

int prime(int num)
{
    for(int i=2;i*i<=num;i++)
    {
        if(num%i==0)
        {
            return 0;
        }
    }
    return 1;
}

int next_prime(int num)
{
    num++;
    while(!prime(num))
    {
        num++;
    }
    return num;

}
void factors(int num)
{
    cout<<"Factors of "<<num<<" are: ";
    for(int i=1;i*i<=num;i++)
    {
        if(num%i==0)
        {
            cout<<i<<" ";
        }
        if(i!=num/i)
        cout<<num/i<<" ";
    }
            cout<<endl;
}
int main()
{
    int n;
    cout<<"Enter a positive number: ";
    cin>>n;

    if(n<=0)
    cout<<"Please enter a positive number.";

        if(prime(n))
        {
            cout<<"It is a prime number"<<endl;
            cout<<"Next prime number is: "<<next_prime(n)<<endl;
        }
        else
        {
            cout<<"It is not a prime number"<<endl;
            factors(n);
        }
    return 0;
}

Q2 Array Operations

#include <iostream>
using namespace std;

void reverse(int a[],int n)
{
    int i;
    for(i=n-1;i>=0;--i)
    {
        cout<<a[i]<<endl;
    }
    
}
void findanddisplay(int a[],int n)
{
    int i,t,j;
    for(i=0;i<n-1;i++)
    {
        for(j=0;j<n-1-i;j++)
        {
            if(a[j]>a[j+1])
            {
                t=a[j];
                a[j]=a[j+1];
                a[j+1]=t;
            }
        }
    }
cout<<"second smallest: "<<a[1]<<endl;
cout<<"second largest: "<<a[n-2];
}
int main()
{
	int a[10],n,i;
	cout<<"Enter size of array";
	cin>>n;
	cout<<"Enter N Nos"<<endl;
	for(i=0;i<n;i++)
	{
		cin>>a[i];
    }  
    cout<<"Reverse array   :   "<<endl;
    reverse(a,n);
    findanddisplay(a,n);    
}

Q3 String Manipulation


Q4 Spiral Number Pattern

#include <iostream>
using namespace std;

void spiralPattern(int n) {
    int arr[n][n], val = 1, top = 0, left = 0, bottom = n - 1, right = n - 1;

    while (val <= n * n) {
        for (int i = left; i <= right; i++) 
        arr[top][i] = val++;
        top++;
        for (int i = top; i <= bottom; i++) 
        arr[i][right] = val++;
        right--;
        for (int i = right; i >= left; i--)
        arr[bottom][i] = val++;
        bottom--;
        for (int i = bottom; i >= top; i--) 
        arr[i][left] = val++;
        left++;
    }

    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) cout << arr[i][j] << "\t";
        cout << endl;
    }
}

int main() {
    int n;
    cout << "Enter n: ";
    cin >> n;
    spiralPattern(n);
    return 0;
}

Q5 Rotate Matrics 90 Degree

#include<iostream>
using namespace std;
int main()
{
    int m,n;
    cout<<"Enter the number of rows and columns: "<<endl;
    cin>>m>>n;
    int arr[m][n];
    cout<<"Enter the elements in the array"<<endl;
    for(int r=0;r<m;r++)
    {
        for(int c=0;c<n;c++)
        {
            cin>>arr[r][c];   
        }
    }
    for(int r=0;r<m;r++)
    {
        for(int c=0;c<n;c++)
        {
            cout<<arr[r][c]<<" ";   
        }
        cout<<endl;
    }
    cout<<"\nRotated matrix: "<<endl;
    for(int c=0;c<n;c++)
    {
        for(int r=m-1;r>=0;r--)
        {
            cout<<arr[r][c]<<" ";
        }
        cout<<endl;
    }
}
